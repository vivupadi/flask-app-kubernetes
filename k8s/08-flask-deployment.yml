apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: taskmanager
  labels:
    app: flask
    tier: frontend
spec:
  replicas: 3  # High availability
  selector:
    matchLabels:
      app: flask
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: flask
        tier: frontend
        version: v1.0
    spec:
      # Init container to wait for database
      initContainers:
      - name: wait-for-db
        image: busybox:latest
        command:
        - sh
        - -c
        - |
          until nc -z postgres-service 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      containers:
      - name: flask
        image: yourdockerhubusername/devops-task-manager:v1.0  # ‚Üê CHANGE THIS
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        # Load all ConfigMap values
        envFrom:
        - configMapRef:
            name: app-config
        # Load Secret values
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DATABASE_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: SECRET_KEY
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3